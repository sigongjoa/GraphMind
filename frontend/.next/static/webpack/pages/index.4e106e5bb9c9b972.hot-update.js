"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./api/llm_client.ts":
/*!***************************!*\
  !*** ./api/llm_client.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkHealth\": function() { return /* binding */ checkHealth; },\n/* harmony export */   \"explainConcept\": function() { return /* binding */ explainConcept; },\n/* harmony export */   \"generateQuestion\": function() { return /* binding */ generateQuestion; },\n/* harmony export */   \"getResponse\": function() { return /* binding */ getResponse; },\n/* harmony export */   \"suggestConcepts\": function() { return /* binding */ suggestConcepts; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n// frontend/api/llm_client.ts\n\n\n\n// API 기본 설정\nvar apiClient = axios__WEBPACK_IMPORTED_MODULE_1___default().create({\n    baseURL: \"http://localhost:8000/api\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    timeout: 30000\n});\n// 에러 인터셉터 추가\napiClient.interceptors.response.use(function(response) {\n    return response;\n}, function(error) {\n    console.error(\"LLM API 요청 오류:\", error);\n    // 사용자 친화적인 오류 메시지\n    if (error.code === \"ECONNABORTED\") {\n        return Promise.reject(new Error(\"LLM 서버 응답 시간이 초과되었습니다. 다시 시도해 주세요.\"));\n    }\n    if (!error.response) {\n        return Promise.reject(new Error(\"LLM 서버에 연결할 수 없습니다. 네트워크 연결을 확인하세요.\"));\n    }\n    return Promise.reject(error);\n});\n// LLM 서비스 상태 확인\nvar checkHealth = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var response;\n        return D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return apiClient.get(\"/llm/health\");\n                case 3:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response.data);\n                case 7:\n                    _ctx.prev = 7;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    console.error(\"LLM 상태 확인 실패:\", _ctx.t0);\n                    return _ctx.abrupt(\"return\", {\n                        status: \"error\",\n                        message: \"연결 실패\"\n                    });\n                case 11:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                7\n            ]\n        ]);\n    }));\n    return function checkHealth() {\n        return _ref.apply(this, arguments);\n    };\n}();\n// 개념 설명 요청\nvar explainConcept = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(concept, context) {\n        var response;\n        return D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return apiClient.post(\"/llm/explain\", {\n                        concept: concept,\n                        context: context\n                    });\n                case 3:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response.data);\n                case 7:\n                    _ctx.prev = 7;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    console.error(\"개념 설명 요청 실패:\", _ctx.t0);\n                    return _ctx.abrupt(\"return\", {\n                        response: \"\".concat(concept, \"은(는) 중요한 개념입니다. (LLM 서비스 연결 오류로 상세 정보를 제공할 수 없습니다.)\")\n                    });\n                case 11:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                7\n            ]\n        ]);\n    }));\n    return function explainConcept(concept, context) {\n        return _ref.apply(this, arguments);\n    };\n}();\n// 문제 생성 요청\nvar generateQuestion = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(concept) {\n        var difficulty, response, _args = arguments;\n        return D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    difficulty = _args.length > 1 && _args[1] !== void 0 ? _args[1] : 1;\n                    _ctx.prev = 1;\n                    _ctx.next = 4;\n                    return apiClient.post(\"/llm/generate-question\", {\n                        concept: concept,\n                        context: null\n                    }, {\n                        params: {\n                            difficulty: difficulty\n                        }\n                    });\n                case 4:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response.data);\n                case 8:\n                    _ctx.prev = 8;\n                    _ctx.t0 = _ctx[\"catch\"](1);\n                    console.error(\"문제 생성 요청 실패:\", _ctx.t0);\n                    return _ctx.abrupt(\"return\", {\n                        question: \"\".concat(concept, \"의 주요 특징은 무엇인가요?\"),\n                        answer: \"\".concat(concept, \"의 주요 특징은 다양한 환경에서의 적용 가능성, 확장성 등이 있습니다.\"),\n                        explanation: \"이 문제는 \".concat(concept, \"의 기본적인 특징에 대한 이해를 묻는 문제입니다. (LLM 서비스 연결 오류로 상세 정보를 제공할 수 없습니다.)\")\n                    });\n                case 12:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                1,\n                8\n            ]\n        ]);\n    }));\n    return function generateQuestion(concept) {\n        return _ref.apply(this, arguments);\n    };\n}();\n// 관련 개념 추천 요청\nvar suggestConcepts = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(concept) {\n        var response;\n        return D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return apiClient.post(\"/llm/suggest-concepts\", {\n                        concept: concept,\n                        context: null\n                    });\n                case 3:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response.data);\n                case 7:\n                    _ctx.prev = 7;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    console.error(\"관련 개념 추천 요청 실패:\", _ctx.t0);\n                    return _ctx.abrupt(\"return\", {\n                        concepts: [\n                            {\n                                name: \"\".concat(concept, \"의 기초\"),\n                                relation: \"선행 개념\"\n                            },\n                            {\n                                name: \"\".concat(concept, \"의 응용\"),\n                                relation: \"후행 개념\"\n                            },\n                            {\n                                name: \"\".concat(concept, \"의 유사 개념\"),\n                                relation: \"유사 개념\"\n                            }\n                        ]\n                    });\n                case 11:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                7\n            ]\n        ]);\n    }));\n    return function suggestConcepts(concept) {\n        return _ref.apply(this, arguments);\n    };\n}();\n// 대화형 응답 요청 (채팅)\nvar getResponse = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(message, concept) {\n        var response;\n        return D_GraphMind_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return apiClient.post(\"/llm/explain\", {\n                        concept: concept,\n                        context: message\n                    });\n                case 3:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response.data);\n                case 7:\n                    _ctx.prev = 7;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    console.error(\"대화형 응답 요청 실패:\", _ctx.t0);\n                    return _ctx.abrupt(\"return\", {\n                        response: '\"'.concat(message, '\"에 대한 응답입니다. 현재 LLM 서비스와 연결이 원활하지 않아 자세한 답변을 드릴 수 없습니다.')\n                    });\n                case 11:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                7\n            ]\n        ]);\n    }));\n    return function getResponse(message, concept) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    checkHealth: checkHealth,\n    explainConcept: explainConcept,\n    generateQuestion: generateQuestion,\n    suggestConcepts: suggestConcepts,\n    getResponse: getResponse\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/llm_client.ts\n"));

/***/ })

});